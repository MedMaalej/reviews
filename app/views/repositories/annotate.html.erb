
<% base_url = "http://192.168.1.99:3000"%>
<body onload="initComponents()"> <link href=<%= base_url +"/plugin_assets/reviews/bstrp/css/bootstrap.min.css"%> rel="stylesheet">
 <link rel="stylesheet" href=<%= base_url+ "http://192.168.1.126:3000/plugin_assets/reviews/awesomplete/awesomplete.css" %> />
 <script src=<%= base_url+"/plugin_assets/reviews/awesomplete/awesomplete.js" %> async></script>
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
 <!-- Include all compiled plugins (below), or include individual files as needed -->
 <script src=<%=base_url+ "/plugin_assets/reviews/bstrp/js/bootstrap.min.js" %>></script>
<%= call_hook(:view_repositories_show_contextual, { :repository => @repository, :project => @project }) %>

<div class="contextual">
  <%= render :partial => 'navigation' %>
</div>
<form role="form" name="validateReview" action=<%= base_url +"/doCommentLine"%>>
   <input type="hidden" id="project_id" name="project_id" value=<%= @project %>>
 <b> Score</b>  <input type="number" name="score" id="score" min="0" max="5">
   <button class="btn btn-info" type="submit" onclick="setValidate()" >Send score</button>
   <br>
    <font color="blue"><%= "The last score:"+session[:lastScore].to_s %></font>
   <input type="hidden" name="scored" id="scored">
</form>
<h2><%= render :partial => 'breadcrumbs', :locals => { :path => @path, :kind => 'file', :revision => @rev } %></h2>

<% session[:path] = @path %>
<%= render :partial => 'link_to_functions' %>

<% colors = Hash.new {|k,v| k[v] = (k.size % 12) } %>

<div class="auto-scroll">
<table class="filecontent annotate syntaxhl">
  <tbody>
    <% line_num = 1; previous_revision = nil %>
    <% syntax_highlight_lines(@path, Redmine::CodesetUtil.to_utf8_by_setting(@annotate.content)).each do |line| %>
      <% revision = @annotate.revisions[line_num - 1] %>
      <tr  id="L<%= line_num %>" class="bloc-<%= revision.nil? ? 0 : colors[revision.identifier || revision.revision] %>">
        <input type="hidden" value=<%= line_num  %> id="line">
        <th class="line-num"><a href="#"   onclick="addLine(<%= line_num %>)" ><%= line_num %></a></th>
        
        <td class="line-code"><pre><%= line.html_safe %></pre></td>
      </tr>
      <% line_num += 1; previous_revision = revision %>
    <% end %>
  </tbody>
</table>
</div>
<% html_title(l(:button_annotate)) %>

<% content_for :header_tags do %>
<%= stylesheet_link_tag 'scm' %>
<% end %>
<form role="form" name="fComment" action=<%= base_url +"/doCommentLine"%>>
   <input type="hidden" id="project_id" name="project_id" value=<%= @project %>>
   <div class="col-lg-2">
   Line : <input type="text" class="form-control" name="lineNumber"  id="lineNumber">
   <br>
   Comment :<textarea id="comment" name="comment" class="form-control" > </textarea>
   <br>
   Error category :
   <select name="errors" class="form-control" id="errors">
      <option> Exception handling  </option>
      <option> Stack overflow </option>
      <option> Bad design </option>
      <option> Line is too long  </option>
   </select>
   <br>
   Assignee :
   <select name="assignee" class="form-control" id="assignee">
   <% users = User.all
      users.each do |user|
         if !user.lastname.eql? "Anonymous"
   %>
      <option> <%= user.firstname %> &nbsp <%= user.lastname %></option>
   <%
      end
      end
    %>
    </select>
   <br> <br>
   <button class="btn btn-info" id="btn-comment" type="button" onclick="checkLines()"  >Save</button>
   
  </div>
 <input class="form-control" type="hidden" name="lineNbr" id="lineNbr">

</form>
</body>
<script type="text/javascript">
    function commentLine(x) {
       document.getElementById("lineNumber").value= x;       
       document.getElementById("lineNbr").value= x;
    }
    function initComponents() {
       //document.getElementById("lineNumber").disabled = true;
    }
    
    function setValidate() {
       document.getElementById("scored").value = 1;
    }
    
    function arrayContainsElement(arr,x){
       for(var i=0;i<arr.length;i++) {
          if(arr[i] == x) {
             return true;
          }
       }
       return false;
    }
    function addLine(x) {  
       var content = document.getElementById("lineNumber").value.split(",");
        
       if(!arrayContainsElement(content,x)) {
          if (document.getElementById("lineNumber").value != "") {
             document.getElementById("lineNumber").value =document.getElementById("lineNumber").value +"," +x;       
          }
          else 
          {
             document.getElementById("lineNumber").value =document.getElementById("lineNumber").value +x;
          }
       }
       else {
          alert("Line already selected!");
       }
     
   }
   function checkLines() {
      var content = document.getElementById("lineNumber").value.split("-");
      for(var i=0;i<content.length-1;i++) {
         var firstArr = content[i].split(",");
         var secondArr = content[i+1].split(",");
         if(parseInt(firstArr[firstArr.length-1]) > parseInt(secondArr[0])) {
             alert("Bad line range ! Please respect that pattern: minLine-maxLine");
         } 
         else
         { 
             document.forms["fComment"].submit();
         }
      }
   }
    
</script>
